class Cognizant:
	VALID_COUNT = 300000
	CLIENT_DICT = {
		'01': 'MetLife',
		'02':'ManuLife',
		'03':'Xerox',
		'04':'Pepsico'
	}

	def __init__(self, location:str, building_id:str, floor:str, client_id:str, odc_number:int):
		self.location = location
		self.building_id = building_id
		self.__floor = floor
		self.__client_id = client_id
		self.__odc_number = odc_number

	def show_details(self):
		print(f'Your office location is: {self.location}\nBuilding Number:{self.building_id}\nFloor Number:{self.floor}')
    ##Using @property 
	@property
	def odc(self):
		print(f'Your ODC is :{self.__odc_number}')
	@odc.setter
	def odc(self, newODc):
		if isinstance(newODc,int) and (1<= newODc>=5):
			self.__odc_number = newODc
		else:
			print(f'Please provide a valied value, {newODc} is not a valid value')
	@property
	def client_name(self):
		return Cognizant.CLIENT_DICT[self.__client_id]
	@client_name.setter
	def client_name(self,clientID:str, clinetName:str):
		if isinstance(clientID,str) and isinstance(clinetName,str):
			Cognizant.CLIENT_DICT[clientID] = clinetName
	
class Employee:
	COUNT = 0

	def __init__(self, name, age, emp_id, client_name):
		self.emp_name = name
		self.age = age
		self.emp_id = emp_id
		self.__client_name = client_name

	def employee_details(self):
		details = f'Employee Name:{self.emp_name}\nEmployee ID: {self.emp_id}\nEmployee Age:{self.age}'

	#using getter & setter
	def get_client(self):
		print(f'{self.emp_name} is working for {self.__client_name}')
	
	def set_client(self, newClient):
		if isinstance(newClient, str) and newClient.isalpha():
			self.__client_name = newClient
	client = property(get_client,set_client)

#object
company1 = Cognizant('Kolkata','C II','09','01','05')
company1.show_details()
company1.odc
newODC_ = '10'
print('Due to internet connectivity at ODC {company1.odc}.')
company1.odc = newODC_
print('{company1.client_name} ODC Change to {company1.odc}')

